
> lyricova-blog@2.0.0 build
> npm run build-ts && npm run lint && npm run build-next


> lyricova-blog@2.0.0 build-ts
> tsc


> lyricova-blog@2.0.0 lint
> tsc --noEmit && eslint "**/*.{js,ts}" --quiet --fix


> lyricova-blog@2.0.0 build-next
> next build

info  - Loaded env from /Users/blueset/Codebase/project-lyricova/packages/lyricova/.env
info  - Linting and checking validity of types...

./src/components/dashboard/DateTimePickerPopup.tsx
68:22  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any

./src/components/dashboard/EntryForm.tsx
315:13  Warning: 'values' is defined but never used.  @typescript-eslint/no-unused-vars
315:53  Warning: 'errors' is defined but never used.  @typescript-eslint/no-unused-vars
478:47  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any
484:41  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any
497:41  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any
503:41  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any

./src/components/dashboard/TagForm.tsx
84:19  Warning: 'result' is assigned a value but never used.  @typescript-eslint/no-unused-vars
95:19  Warning: 'result' is assigned a value but never used.  @typescript-eslint/no-unused-vars

./src/components/dashboard/layouts/DashboardLayout.tsx
159:9  Warning: 'container' is assigned a value but never used.  @typescript-eslint/no-unused-vars

./src/components/public/Link.tsx
28:43  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any

./src/components/public/Marcacos.tsx
35:6  Warning: 'entries' is defined but never used.  @typescript-eslint/no-unused-vars
129:13  Warning: 'cnv' is assigned a value but never used.  @typescript-eslint/no-unused-vars

./src/components/public/TransitionCover.tsx
189:29  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any

./src/components/public/listing/ArchiveHeader.tsx
5:10  Warning: 'Title' is defined but never used.  @typescript-eslint/no-unused-vars

./src/components/public/listing/SingleEntry.tsx
49:50  Warning: 'entries' is defined but never used.  @typescript-eslint/no-unused-vars
82:72  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any

./src/components/public/listing/SubArchiveHeader.tsx
1:20  Warning: 'tagLine1' is defined but never used.  @typescript-eslint/no-unused-vars
1:30  Warning: 'tagLine2' is defined but never used.  @typescript-eslint/no-unused-vars
5:21  Warning: 'useEffect' is defined but never used.  @typescript-eslint/no-unused-vars
5:32  Warning: 'useLayoutEffect' is defined but never used.  @typescript-eslint/no-unused-vars
5:49  Warning: 'useMemo' is defined but never used.  @typescript-eslint/no-unused-vars
5:58  Warning: 'useRef' is defined but never used.  @typescript-eslint/no-unused-vars
6:8  Warning: '_' is defined but never used.  @typescript-eslint/no-unused-vars

./src/components/public/nav/NavPanel.tsx
98:49  Warning: 'i' is defined but never used.  @typescript-eslint/no-unused-vars

./src/components/public/single/MainVerse.tsx
3:10  Warning: 'PlainTextHangingPunct' is defined but never used.  @typescript-eslint/no-unused-vars

./src/components/public/single/OtherVerse.tsx
2:10  Warning: 'PlainTextHangingPunct' is defined but never used.  @typescript-eslint/no-unused-vars

./src/components/public/single/VerseRenderer.tsx
2:10  Warning: 'PlainTextHangingPunct' is defined but never used.  @typescript-eslint/no-unused-vars

./src/controllers/public.ts
107:27  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any

./src/frontendUtils/colors.ts
14:13  Warning: 'pos' is defined but never used.  @typescript-eslint/no-unused-vars

./src/graphql/EntryResolver.ts
27:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
57:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
78:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
81:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
84:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
87:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
90:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
94:12  Warning: 'of' is defined but never used.  @typescript-eslint/no-unused-vars
96:11  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
105:11  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
106:34  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
125:14  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
179:14  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
181:17  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
279:14  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
281:17  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
292:14  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
294:17  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
308:19  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
313:19  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
318:19  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
325:19  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
332:19  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
340:14  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
351:14  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars

./src/graphql/SongResolver.ts
15:10  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
18:10  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
21:10  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
33:10  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
36:10  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
39:10  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
57:10  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
60:10  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
63:10  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
67:11  Warning: 'of' is defined but never used.  @typescript-eslint/no-unused-vars
70:10  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
71:32  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
75:10  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
86:10  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
94:18  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
99:18  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
104:18  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
109:18  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
114:18  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
119:18  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
125:13  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
151:13  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
153:16  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars

./src/graphql/StatsResolver.ts
15:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
18:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
21:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
26:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
31:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
40:11  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars

./src/graphql/TagResolver.ts
40:12  Warning: 'of' is defined but never used.  @typescript-eslint/no-unused-vars
42:11  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
47:11  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
53:14  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
59:14  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
73:14  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
83:19  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars

./src/graphql/TransliterationResolver.ts
24:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
35:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
40:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
80:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
91:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
102:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
113:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
142:11  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
145:23  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars

./src/graphql/UserResolver.ts
7:11  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars

./src/graphql/index.ts
38:11  Warning: 'type' is defined but never used.  @typescript-eslint/no-unused-vars
50:11  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
56:11  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
64:11  Warning: 'returns' is defined but never used.  @typescript-eslint/no-unused-vars
85:23  Warning: 'sessionId' is defined but never used.  @typescript-eslint/no-unused-vars

./src/pages/_document.tsx
58:25  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any

./src/pages/api/og.tsx
1:10  Warning: 'ImageResponse' is defined but never used.  @typescript-eslint/no-unused-vars

./src/pages/dashboard/entries/index.tsx
74:9  Warning: 'router' is assigned a value but never used.  @typescript-eslint/no-unused-vars
102:42  Warning: 'colDef' is defined but never used.  @typescript-eslint/no-unused-vars
102:50  Warning: 'apiRef' is defined but never used.  @typescript-eslint/no-unused-vars
117:42  Warning: 'colDef' is defined but never used.  @typescript-eslint/no-unused-vars
117:50  Warning: 'apiRef' is defined but never used.  @typescript-eslint/no-unused-vars
149:42  Warning: 'colDef' is defined but never used.  @typescript-eslint/no-unused-vars
149:50  Warning: 'apiRef' is defined but never used.  @typescript-eslint/no-unused-vars
164:25  Warning: Component definition is missing display name  react/display-name
186:42  Warning: 'colDef' is defined but never used.  @typescript-eslint/no-unused-vars
186:50  Warning: 'apiRef' is defined but never used.  @typescript-eslint/no-unused-vars
201:25  Warning: Component definition is missing display name  react/display-name
226:24  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any

./src/pages/dashboard/tags/index.tsx
45:9  Warning: 'router' is assigned a value but never used.  @typescript-eslint/no-unused-vars
64:25  Warning: Component definition is missing display name  react/display-name
72:25  Warning: Component definition is missing display name  react/display-name
91:25  Warning: Component definition is missing display name  react/display-name

./src/pages/entries/[entryId].tsx
4:19  Warning: 'useState' is defined but never used.  @typescript-eslint/no-unused-vars
161:38  Warning: 'idx' is defined but never used.  @typescript-eslint/no-unused-vars

./src/pages/index.tsx
19:66  Warning: 'context' is defined but never used.  @typescript-eslint/no-unused-vars

./src/pages/pages/[page].tsx
3:42  Warning: 'GetServerSideProps' is defined but never used.  @typescript-eslint/no-unused-vars

./src/pages/screensavers/centered.tsx
12:3  Warning: 'generateColorGradientSteps' is defined but never used.  @typescript-eslint/no-unused-vars

./src/pages/screensavers/docs.tsx
6:26  Warning: 'GetStaticPaths' is defined but never used.  @typescript-eslint/no-unused-vars
6:42  Warning: 'GetServerSideProps' is defined but never used.  @typescript-eslint/no-unused-vars
23:3  Warning: 'context' is defined but never used.  @typescript-eslint/no-unused-vars

./src/pages/screensavers/glucagon.tsx
4:10  Warning: 'useCallback' is defined but never used.  @typescript-eslint/no-unused-vars
4:34  Warning: 'useMemo' is defined but never used.  @typescript-eslint/no-unused-vars
198:15  Warning: 'pos' is defined but never used.  @typescript-eslint/no-unused-vars
350:20  Warning: 'height' is assigned a value but never used.  @typescript-eslint/no-unused-vars
445:6  Warning: React Hook useEffect has a missing dependency: 'entries'. Either include it or remove the dependency array.  react-hooks/exhaustive-deps

./src/pages/screensavers/index.tsx
2:8  Warning: 'Head' is defined but never used.  @typescript-eslint/no-unused-vars

./src/pages/search/index.tsx
7:23  Warning: 'Fragment' is defined but never used.  @typescript-eslint/no-unused-vars

./src/pages/tags/index.tsx
20:66  Warning: 'context' is defined but never used.  @typescript-eslint/no-unused-vars
75:37  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any

./src/server.ts
27:9  Warning: 'server' is assigned a value but never used.  @typescript-eslint/no-unused-vars

./src/utils/screensaverProps.tsx
4:10  Warning: 'GetStaticProps' is defined but never used.  @typescript-eslint/no-unused-vars
4:26  Warning: 'GetStaticPaths' is defined but never used.  @typescript-eslint/no-unused-vars
20:25  Warning: Unexpected any. Specify a different type.  @typescript-eslint/no-explicit-any

info  - Need to disable some ESLint rules? Learn more here: https://nextjs.org/docs/basic-features/eslint#disabling-rules
info  - Creating an optimized production build...
info  - Compiled successfully
info  - Collecting page data...
Using .env file to supply config environment variables
Using .env file to supply config environment variables
Using .env file to supply config environment variables
Using .env file to supply config environment variables
Using .env file to supply config environment variables
Using .env file to supply config environment variables
Using .env file to supply config environment variables
Using .env file to supply config environment variables
Using .env file to supply config environment variables
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT `songId`, COUNT(`entryId`) AS `count` FROM `SongOfEntries` AS `SongOfEntry` GROUP BY `songId`;
Database connection has been established successfully.
Executing (default): SELECT
      ArtistOfSongs.artistId as artistId,
      COUNT(SongOfEntries.entryId) as count
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE
      artistId is not NULL
    GROUP BY ArtistOfSongs.artistId;
Database connection has been established successfully.
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT
      ArtistOfSongs.artistId as artistId,
      COUNT(SongOfEntries.entryId) as count
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE
      artistId is not NULL
    GROUP BY ArtistOfSongs.artistId;
Executing (default): SELECT `slug`, `name`, `color`, `createdAt`, `updatedAt` FROM `Tags` AS `Tag`;
Database connection has been established successfully.
Database connection has been established successfully.
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT `songId` FROM `SongOfEntries` AS `SongOfEntry` GROUP BY `songId`;
Executing (default): SELECT 1+1 AS result
Database connection has been established successfully.
Executing (default): SELECT `tagId`, COUNT(`entryId`) AS `count` FROM `TagOfEntries` AS `TagOfEntry` GROUP BY `tagId`;
Database connection has been established successfully.
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT `id` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Database connection has been established successfully.
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Database connection has been established successfully.
Executing (default): SELECT 1+1 AS result
Database connection has been established successfully.
info  - Generating static pages (0/1232)
Executing (default): SELECT `slug`, `name`, `color`, `createdAt`, `updatedAt`, (SELECT COUNT(*) FROM TagOfEntries WHERE TagOfEntries.tagId = Tag.slug) AS `entryCount` FROM `Tags` AS `Tag`;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 53);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 53
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (100, 288, 439, 90, 123, 195, 105, 357, 364, 435, 456)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 14);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (282, 283, 183, 184, 212, 453, 198, 314, 401, 429, 217, 428, 203, 185, 319, 411, 21, 92, 173, 174, 54, 55, 355, 56, 64, 65, 67, 88, 114, 249, 149, 214, 162, 180, 188, 189, 215, 309, 194, 206, 218, 268, 278, 296, 297, 315, 316, 317, 332, 334, 371, 372, 373)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 14
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 103, 110, 433, 333, 74, 147, 250, 11, 50, 51, 15, 196, 18, 37, 56, 57, 430, 93, 98, 99, 461, 114, 249, 120, 140, 169, 170, 171, 172, 180, 194, 210, 228, 275, 291, 292, 306, 415, 325, 327, 446, 328, 400, 433, 459)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 258, 259, 103, 110, 433, 74, 147, 250, 11, 50, 51, 18, 43, 56, 57, 430, 93, 114, 249, 120, 140, 171, 172, 180, 194, 202, 210, 291, 292, 306, 415, 328, 400, 416, 423, 424, 425, 426, 433, 434, 452, 459)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 94);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 94
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (166, 378, 379, 380, 387, 449, 103, 110, 433, 15, 196, 114, 249, 120, 165, 221, 348, 349, 421, 433, 433)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 97);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 97
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (114, 249, 120)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 105);
Using .env file to supply config environment variables
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 105
Using .env file to supply config environment variables
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (114, 249)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 112);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 112
Using .env file to supply config environment variables
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (418, 114, 249, 120, 278)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 127);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 127
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (107, 224, 114, 249, 120)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 191);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 191
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (114, 249, 120, 180, 194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 710);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 710
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (114, 249, 120)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 712);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 712
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (114, 249, 120, 278)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1467);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1467
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (114, 249)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1611);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1997);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1611
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2131);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1997
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2131
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (114, 249)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (114, 249, 202)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (269, 358, 359, 114, 249, 124, 125, 126, 155, 417, 450)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 93363);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 93363
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (114, 249)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 17);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1466);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 17
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1466
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 49);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 49
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (337, 368)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (347, 368)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (217, 203, 121, 265, 267, 206, 211, 350, 351, 353, 452)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 35);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 35
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (246, 433)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1391);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1391
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (103, 110, 433, 38, 165, 221, 433)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 154);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2775);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 154
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (112, 113, 134)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 85);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2775
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 85
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (183, 184, 212, 453, 109, 132, 239, 323, 422, 314, 401, 429, 10, 41, 1, 460, 428, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 185, 319, 23, 163, 308, 309, 413, 6, 74, 9, 12, 236, 237, 11, 50, 51, 18, 68, 70, 127, 149, 214, 181, 187, 260, 261, 188, 189, 215, 309, 210, 218, 268, 296, 297, 444, 445, 447, 458, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 137);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 137
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (295, 82, 122, 377, 443, 124, 125, 126, 155, 417, 374, 375, 434, 459)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Using .env file to supply config environment variables
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (103, 110, 433, 433)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 347);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 347
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 82, 122, 377, 443, 124, 125, 126, 155, 417, 216, 242, 243, 293, 294)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 349);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 349
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 848);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 848
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (82, 122, 377, 443, 194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (43, 82, 122, 377, 443)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Using .env file to supply config environment variables
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2557);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 153);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2557
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 153
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (45, 208, 82, 122, 377, 443, 95, 155, 417, 340, 341, 374, 375)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 4);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (232, 248)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 4
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (120, 337)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (145, 146, 190, 307)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11553);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11553
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (145, 146, 190, 307)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 8);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 8
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 62);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 62
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (142, 144, 60, 61, 62, 246, 14, 63, 305, 52, 53, 64, 65, 67, 88, 255, 315, 316, 317, 332)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (21, 92, 173, 174, 66, 69, 222, 227, 241)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3580);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3580
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (21, 92, 173, 174, 66, 69, 222, 227, 241)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11791);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11791
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (21, 92, 173, 174, 66, 69, 222, 227, 241)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 45);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 45
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (142, 144, 405, 396, 454, 118, 119, 254, 133, 141, 151, 204, 205, 255, 264, 329, 330, 331, 386)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1446);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1446
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (118, 119, 254)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 36150);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 36150
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (118, 119, 254)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 67);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 67
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (85, 86, 96, 97, 247, 342)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 249);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 249
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (342)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 7570);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 7570
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (342)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 41);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 41
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (282, 283, 14, 63, 305)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 237);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 237
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (14, 63, 305)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2721);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 60481);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2721
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 60481
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (14, 63, 305)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (14, 63, 305)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 239);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 239
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (22, 153)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2074);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2074
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (64, 65, 67)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2523);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2523
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (64, 65, 67)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 78);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 78
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3550);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3550
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (4, 26, 49, 117, 135, 136, 137, 138, 213, 156, 157, 167, 191, 230, 311, 322, 176, 240, 298, 304, 321, 231, 335, 336)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (28, 29, 30, 381, 226, 234, 385, 21, 92, 173, 174, 140, 245)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (225)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3553);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3553
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (225)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5437);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5437
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (127)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT `slug` FROM `Tags` AS `Tag`;
Database connection has been established successfully.
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 75);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 75
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 288);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 288
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (269, 28, 29, 30, 381, 140, 207, 280)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (207)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3197);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3197
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (207)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 290);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 290
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (333)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 909);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 909
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (333)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 6161);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 6161
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2333);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2333
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (333)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `verses`.`typingSequence` AS `verses.typingSequence`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Database connection has been established successfully.
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (282, 283)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 230);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 230
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (162, 233)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2569);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2569
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (162, 233)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 44887);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 89);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 326);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 44887
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 89
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 326
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (162)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2589);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (266, 271, 3, 94, 154, 244, 193, 251)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2589
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (154, 244, 251)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (193)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2);
Database connection has been established successfully.
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 433);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 299);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 433
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 299
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2078);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2078
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (147, 250)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (17, 84)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (84)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2077);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2077
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (17)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (168, 164, 192, 44, 197, 320, 4, 26, 49, 8, 71, 72, 307, 54, 55, 355, 56, 105, 357, 112, 113, 134, 114, 249, 120, 135, 136, 137, 138, 213, 140, 156, 157, 176, 240, 298, 304, 321, 180, 194, 216, 242, 243, 229, 310, 312, 313, 326, 328, 337)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2088);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2088
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 96);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 96
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2138);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 83);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2138
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 83
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (17)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (131)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 312);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 44820);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (131)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (262, 263, 432, 376, 219, 457)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 312
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 44820
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (73, 39)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (335, 336)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 30961);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 30961
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (39)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 366);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 366
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (178, 159)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 51);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 51
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (142, 144, 411, 8, 71, 72, 307, 169, 170, 182, 303, 334)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 6108);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 6108
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (264)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 491);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 491
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (37)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1228);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1228
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (37)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1465);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1465
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (37)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1637);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 4764);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1637
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 4764
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (37)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (37)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 409);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 409
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (44, 197, 320)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 777);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 777
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (44, 197, 320)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 71);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 71
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 238);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (56, 104, 140, 180, 194, 328)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 238
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (104)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 7601);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 7601
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (104)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 48);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 48
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (54, 55, 355)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11483);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11483
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (54, 55, 355)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 198);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 198
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (199, 382, 383, 384)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 397);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 16);
Database connection has been established successfully.
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 16
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 397
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 29763);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 29763
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (199, 382, 383, 384)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 29764);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 29764
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (114, 249, 225)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (199, 382, 383, 384)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 673);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 673
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (57, 430)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (200)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 675);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 675
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2574);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2574
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1266);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (57, 430)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1266
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (57, 430)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (121, 265, 267, 211, 350, 351, 353)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11830);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11830
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (367, 369, 152, 356, 438)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 76);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 80);
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 81);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 76
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 80
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 81
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 371);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 371
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 79);
Database connection has been established successfully.
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (28, 29, 30, 381, 140)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (28, 29, 30, 381, 140, 180)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (28, 29, 30, 381, 140, 180)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (28, 29, 30, 381, 24, 83, 111, 270)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 79
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (28, 29, 30, 381, 114, 249, 120, 140, 209, 290, 299)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2324);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 147);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2324
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 147
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (220, 257)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (38)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 797);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 797
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 116);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11667);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 116
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11667
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (220, 257)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (402, 451, 42, 89, 128, 160, 194, 201, 457)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (220, 257)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15315);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15315
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15316);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (128)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15316
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (128)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 89324);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 61213);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 89324
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 61213
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (128)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (11, 50, 51, 68)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 34575);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 267);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 34575
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 267
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 8994);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (347)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (108, 116, 130, 115)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 8994
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (411, 169, 170, 334)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 627);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 627
Using .env file to supply config environment variables
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (108, 116, 130, 115, 324, 326, 406)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 58);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 58
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (2, 140)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 661);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 661
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 233);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (98, 99, 461, 363)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 233
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 25253);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 25253
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (151)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (151)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 715);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 485);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 485
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 715
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 202, 216, 242, 243, 293, 294, 328)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (226, 234, 385)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1756);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1756
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 504);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (202)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 504
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 552);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 552
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (183, 184, 212, 453, 343, 410, 166, 378, 379, 380, 387, 449, 393, 394, 5, 139, 7, 45, 208, 95, 120, 194, 273, 274, 289, 277, 284, 388, 389, 441, 442, 340, 341, 345, 360, 440)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (5, 139, 45, 208, 95, 340, 341)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 9219);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 9219
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2820);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2820
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5472);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5472
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (407, 5, 139, 45, 208)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (45, 208)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 731);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 731
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (354)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2268);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2268
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (354)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 717);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 717
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (228, 325, 327, 446)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (202)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 103);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 103
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (258, 259, 56)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15273);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15273
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (258, 259)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2650);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 119);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3104);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 119
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3104
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 18);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2650
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 18
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 22);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (24, 83, 111, 270, 56)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 22
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (24, 83, 111, 270)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (46, 47)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (258, 259)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (252)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 9000);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 9000
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2884);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (252)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2884
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2885);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1377);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2885
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1377
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 72876);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (204, 205)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 72876
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (142, 144, 204, 205)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 72881);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (3)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (266, 3, 154, 244)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 317);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 72881
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 317
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (3)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (448)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 740);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 118);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 740
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 118
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 12);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (177)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (115, 194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 12
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 176);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 176
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (56, 180, 194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (56, 140, 180, 194, 328)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 499);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2123);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2124);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 499
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2123
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2124
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 772);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (56)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (56)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 772
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (56)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (300, 43)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1940);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 66);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1940
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2059);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2073);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2059
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 876);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 66
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2073
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5459);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 537);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 876
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1379);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5459
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 537
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (280)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (280)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1379
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (450)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (450)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (269, 358, 359)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (43)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (269, 7, 25, 40, 58, 59)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (280)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 634);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 634
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 29572);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 29572
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (462)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (462)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 30900);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 30900
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 30901);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 30902);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 30903);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 410);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 30901
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 30902
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1591);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 30903
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 410
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1591
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (462)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (462)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (462)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (150, 281)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (462)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (150, 281)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 270);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 270
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (418, 246)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 282);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 268);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3337);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 282
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 268
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3337
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (295)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (418)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (418)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1114);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1114
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1389);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 10124);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1389
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 10124
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (295)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (295)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (295, 434)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2134);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 443);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 443
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2134
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 735);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 735
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (13, 352)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (5, 139)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (396, 7)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1405);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1444);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 618);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1405
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1444
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 179);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 618
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (7)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (7)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (25, 40, 58, 59)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 179
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5226);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5226
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (400)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (400)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5234);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 7504);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5234
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 7504
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (198, 400)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (400)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 9810);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 9810
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (140)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 95);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1075);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 95
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1075
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2605);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (158)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2605
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 458);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 458
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (158)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1640);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 442);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 442
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1640
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (142, 144, 245)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2498);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (198)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (245)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (158)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2498
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (198)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2626);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2626
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (198, 142, 144)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 139);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 139
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 457);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 457
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (31, 32, 33, 34, 35, 36, 120, 179, 180, 194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 9875);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (31, 32, 33, 34, 35, 36, 179)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 9875
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1778);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (31, 32, 33, 34, 35, 36)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1778
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (87, 91, 101, 102, 161)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2315);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2315
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2316);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (87)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2316
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 353);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 353
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (374, 375)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (101, 102)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 354);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 354
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 28);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2616);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 28
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2616
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (374, 375)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (27, 106)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (367, 369, 390, 391, 392, 27, 106, 395, 397, 356, 362, 438, 463)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 124);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 124
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (142, 144, 133, 141, 255)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2352);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2352
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (142, 144)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2558);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2559);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2558
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2559
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (95, 340, 341, 364, 435, 456, 434)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (95, 340, 341, 434)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1408);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 46);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1408
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 46
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (168)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15954);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (168)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15954
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 38);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 38
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (168)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (266)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 46280);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 46280
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (266, 154, 244)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 10143);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 10143
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2472);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2472
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (93)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (211)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1378);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1378
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (153)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2629);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2629
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (153)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 549);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 549
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1863);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2287);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1863
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (278)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1766);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2287
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 623);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1766
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 623
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (278)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 278)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (187, 260, 261, 194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (166, 378, 379, 380, 387, 449, 186, 120, 148, 165, 221, 194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5349);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5704);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2731);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 73);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1835);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5349
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5704
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2731
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 73
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1835
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 4675);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (148)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (124, 125, 126)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (188, 189, 215, 309, 296, 297)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 4675
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (148)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (176, 240, 298, 304, 321)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (279, 285)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5025);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5025
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3199);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (279, 285)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3199
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1413);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 350);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 350
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 295);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1413
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 295
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3012);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3013);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3012
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (155, 417)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3013
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (186)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (186)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (186)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (176, 240, 298, 304, 321)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5588);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 155, 417, 216, 242, 243, 293, 294)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5588
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 194, 216, 242, 243, 293, 294, 324)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5590);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2954);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5590
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2954
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 77);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 77
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (340, 341)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 269);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (324)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 269
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (120, 194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (120)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 271);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 271
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (120)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1054);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1054
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2283);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (120)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2283
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88, 120, 293, 294)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2594);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2594
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (120)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3439);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5792);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3439
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5792
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (120)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (120)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 9390);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1454);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 9390
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1454
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2284);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (120)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2284
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2285);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2285
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88, 216, 242, 243)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2292);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3571);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3574);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2292
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3573);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3574
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3571
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3575);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3575
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 13484);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3573
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 13484
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 13485);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 13485
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 13486);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 13486
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 13487);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 117);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 13487
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 117
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 87507);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 146);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 146
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 87507
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (180, 194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (180, 194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (88)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 246);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1722);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 246
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15723);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1722
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15723
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15724);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (180, 194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15724
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (133, 141, 255)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 16483);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (201, 206)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 16483
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (206)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (91)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 17330);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 17330
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 343);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 18684);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 343
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (91)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 18684
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (339)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3258);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3258
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (91)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (339)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2294);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 781);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2294
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 781
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3288);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3288
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3569);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3569
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11839);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 9805);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11839
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 9805
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15811);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 216, 242, 243, 293, 294)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 216, 242, 243, 293, 294)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15811
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15948);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15948
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 293, 294)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 216, 242, 243)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 20113);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 20113
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 20116);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 20114);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 20116
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 216, 242, 243, 328)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 20114
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 381);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11833);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11834);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11833
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 381
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 216, 242, 243)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11834
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194, 291, 292, 306, 415)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194, 291, 292, 306, 415)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (300, 291, 292, 306, 415)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (339)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11835);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15490);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11835
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15490
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11836);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194, 291, 292, 306, 415)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194, 291, 292, 306, 415)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11836
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194, 291, 292, 306, 415)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 16375);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 928);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 16375
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 928
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (291, 292, 306, 415)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (229, 310, 312, 313)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 23748);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 7611);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 23748
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 7611
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (229, 310, 312, 313)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (160)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 13350);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 13350
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (161)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 14986);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1407);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 14986
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1407
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 36049);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11630);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11630
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 36049
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (161)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 843);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (438)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 843
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (343, 410, 393, 394, 273, 274, 289, 277, 284, 388, 389, 441, 442, 345, 360, 440)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (343, 393, 394, 273, 274, 289, 277, 284, 388, 389, 441, 442, 345)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (201)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 9055);
info  - Generating static pages (308/1232)
Database connection has been established successfully.
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 13259);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 13259
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3151);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (201)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 7437);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3151
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 7438);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1724);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1724
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 7437
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 7438
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2745);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (216, 242, 243)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (300)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2745
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (300)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (300)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3098);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 22805);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3098
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (216, 242, 243)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 22805
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 9055
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (345)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (345, 404, 419, 420, 416)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 26806);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 26806
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (345)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11618);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 598);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11618
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 598
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 43228);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 36280);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 43228
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (209, 290, 299)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (376, 457)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 18748);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 36280
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 18748
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 29490);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 29490
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (42, 89)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (326)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (326)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (225)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (437)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 29491);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 29491
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (326)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1732);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 41428);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 28185);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1732
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 41428
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 28185
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (286, 287)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (286, 287, 346)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1984);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (286, 287)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 6015);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1984
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 6061);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 6015
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 6061
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (293, 294)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (293, 294)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (293, 294)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 29489);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 29489
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (293, 294)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 42977);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 42977
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 13033);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (293, 294)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 13033
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (454, 329, 330, 331, 386)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 50234);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 50234
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 49236);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2561);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 49236
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 5058);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2561
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 13225);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 18373);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 5058
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 13225
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (329, 330, 331, 386)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 18373
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (329, 330, 331, 386)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (410)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (328)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 658);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 437);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (328)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 658
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 437
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (338)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (434)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (434)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 898);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 898
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (434)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1278);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1278
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2436);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 10259);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2436
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 10259
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (434)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (361, 370)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (361, 370)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 21165);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 21165
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 40);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 51589);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 40
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3341);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 51589
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3341
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (361, 370)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3348);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (171, 172)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 50233);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (365, 366, 431)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (364, 435, 456)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 50233
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3348
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (364, 435, 456)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (364, 435, 456)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 66878);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3327);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 16534);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 66878
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3327
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 16534
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (395, 396, 356, 362, 455)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 25365);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 25355);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 41261);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 25365
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 25355
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 41261
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (364, 435, 456)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (346)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (346)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 49809);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 49809
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (346)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (346)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 25358);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 25358
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 14895);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (395, 356)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 14895
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 49127);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (346)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 49127
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 49431);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 49431
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (403)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (403)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (403)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 30797);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 30797
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 44570);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (371, 372, 373)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 44570
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (371, 372, 373)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 10025);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 10025
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (223)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 49601);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 51570);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 49601
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 34704);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 64856);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 51570
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 64886);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 68658);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 64856
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 34704
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 43213);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (223)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 64886
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 68658
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 43213
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (223)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (404, 419, 420, 416, 423, 424, 425, 426, 427)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (404, 419, 420, 416)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (223)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (404, 419, 420, 427)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 72416);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (416)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 72416
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1226);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1226
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (409, 455)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (427)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3326);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3326
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (455)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 28258);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 28258
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 49721);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 36159);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 49721
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 36159
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 60331);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 60331
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (407)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (407)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (407)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (407)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 63959);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 522);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 63959
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 522
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 41659);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (459)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 41659
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (390, 391, 392, 395)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (390, 391, 392)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 79466);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 79466
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 35798);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 60068);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 35798
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 41722);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (421, 433)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 60068
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 41722
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (393, 394)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (405, 396, 454)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (396)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 74679);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 75022);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 74679
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 155);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 156);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 75022
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 247);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 23745);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 155
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 156
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 248);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 247
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 23745
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (256)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (405, 396, 454)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 248
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (275)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 380);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 383);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 380
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1746);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1746
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 383
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1763);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1763
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1776);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1777);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2053);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1776
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2053
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1777
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 10066);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2181);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 10066
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2181
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 10067);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 10067
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 10068);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 18947);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 34013);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 10068
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 34013
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 18947
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (194)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1280);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1280
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (301)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 7615);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 7615
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15927);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15927
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (301)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 68624);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (301)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 4828);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 68624
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 4828
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (423, 424, 425, 426)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 80934);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (412, 414)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 80934
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 23316);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 23316
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 61538);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 61538
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (402, 451)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (398, 399)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (398, 399)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 85852);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 85852
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 50473);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (406)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2960);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2960
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 50473
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 49487);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 49487
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 79652);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (409)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 79652
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (409)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (398, 399)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (409)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 106520);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 106520
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 77362);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 34291);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 77362
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 77978);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 34291
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 77978
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (409)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (465)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (408)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (465)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3181);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3181
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 477);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (405)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `slug`, `name`, `color`, `createdAt`, `updatedAt` FROM `Tags` AS `Tag` WHERE `Tag`.`slug` = 'core';
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 477
Executing (default): SELECT count(*) AS `count` FROM `TagOfEntries` AS `TagOfEntry` WHERE `TagOfEntry`.`tagId` = 'core';
Executing (default): SELECT `slug`, `name`, `color`, `createdAt`, `updatedAt` FROM `Tags` AS `Tag` WHERE `Tag`.`slug` = 'light';
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (463)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `slug`, `name`, `color`, `createdAt`, `updatedAt` FROM `Tags` AS `Tag` WHERE `Tag`.`slug` = 'dark';
Executing (default): SELECT count(*) AS `count` FROM `TagOfEntries` AS `TagOfEntry` WHERE `TagOfEntry`.`tagId` = 'light';
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `TagOfEntry`.`id` AS `TagOfEntry.id`, `TagOfEntry`.`tagId` AS `TagOfEntry.tagId`, `TagOfEntry`.`entryId` AS `TagOfEntry.entryId`, `TagOfEntry`.`creationDate` AS `TagOfEntry.creationDate`, `TagOfEntry`.`updatedOn` AS `TagOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `TagOfEntries` AS `TagOfEntry` ON `Entry`.`id` = `TagOfEntry`.`entryId` AND `TagOfEntry`.`tagId` = 'core' WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `slug`, `name`, `color`, `createdAt`, `updatedAt` FROM `Tags` AS `Tag` WHERE `Tag`.`slug` = 'soft';
Executing (default): SELECT count(*) AS `count` FROM `TagOfEntries` AS `TagOfEntry` WHERE `TagOfEntry`.`tagId` = 'dark';
Executing (default): SELECT `slug`, `name`, `color`, `createdAt`, `updatedAt` FROM `Tags` AS `Tag` WHERE `Tag`.`slug` = 'solid';
Executing (default): SELECT `slug`, `name`, `color`, `createdAt`, `updatedAt` FROM `Tags` AS `Tag` WHERE `Tag`.`slug` = 'sweet';
Executing (default): SELECT count(*) AS `count` FROM `TagOfEntries` AS `TagOfEntry` WHERE `TagOfEntry`.`tagId` = 'soft';
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `TagOfEntry`.`id` AS `TagOfEntry.id`, `TagOfEntry`.`tagId` AS `TagOfEntry.tagId`, `TagOfEntry`.`entryId` AS `TagOfEntry.entryId`, `TagOfEntry`.`creationDate` AS `TagOfEntry.creationDate`, `TagOfEntry`.`updatedOn` AS `TagOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `TagOfEntries` AS `TagOfEntry` ON `Entry`.`id` = `TagOfEntry`.`entryId` AND `TagOfEntry`.`tagId` = 'light' WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `TagOfEntries` AS `TagOfEntry` WHERE `TagOfEntry`.`tagId` = 'solid';
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `TagOfEntry`.`id` AS `TagOfEntry.id`, `TagOfEntry`.`tagId` AS `TagOfEntry.tagId`, `TagOfEntry`.`entryId` AS `TagOfEntry.entryId`, `TagOfEntry`.`creationDate` AS `TagOfEntry.creationDate`, `TagOfEntry`.`updatedOn` AS `TagOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `TagOfEntries` AS `TagOfEntry` ON `Entry`.`id` = `TagOfEntry`.`entryId` AND `TagOfEntry`.`tagId` = 'dark' WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `TagOfEntries` AS `TagOfEntry` WHERE `TagOfEntry`.`tagId` = 'sweet';
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `TagOfEntry`.`id` AS `TagOfEntry.id`, `TagOfEntry`.`tagId` AS `TagOfEntry.tagId`, `TagOfEntry`.`entryId` AS `TagOfEntry.entryId`, `TagOfEntry`.`creationDate` AS `TagOfEntry.creationDate`, `TagOfEntry`.`updatedOn` AS `TagOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `TagOfEntries` AS `TagOfEntry` ON `Entry`.`id` = `TagOfEntry`.`entryId` AND `TagOfEntry`.`tagId` = 'soft' WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `TagOfEntry`.`id` AS `TagOfEntry.id`, `TagOfEntry`.`tagId` AS `TagOfEntry.tagId`, `TagOfEntry`.`entryId` AS `TagOfEntry.entryId`, `TagOfEntry`.`creationDate` AS `TagOfEntry.creationDate`, `TagOfEntry`.`updatedOn` AS `TagOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `TagOfEntries` AS `TagOfEntry` ON `Entry`.`id` = `TagOfEntry`.`entryId` AND `TagOfEntry`.`tagId` = 'solid' WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `TagOfEntry`.`id` AS `TagOfEntry.id`, `TagOfEntry`.`tagId` AS `TagOfEntry.tagId`, `TagOfEntry`.`entryId` AS `TagOfEntry.entryId`, `TagOfEntry`.`creationDate` AS `TagOfEntry.creationDate`, `TagOfEntry`.`updatedOn` AS `TagOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `TagOfEntries` AS `TagOfEntry` ON `Entry`.`id` = `TagOfEntry`.`entryId` AND `TagOfEntry`.`tagId` = 'sweet' WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `slug`, `name`, `color`, `createdAt`, `updatedAt` FROM `Tags` AS `Tag` WHERE `Tag`.`slug` = 'vivid';
Executing (default): SELECT count(*) AS `count` FROM `TagOfEntries` AS `TagOfEntry` WHERE `TagOfEntry`.`tagId` = 'vivid';
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `TagOfEntry`.`id` AS `TagOfEntry.id`, `TagOfEntry`.`tagId` AS `TagOfEntry.tagId`, `TagOfEntry`.`entryId` AS `TagOfEntry.entryId`, `TagOfEntry`.`creationDate` AS `TagOfEntry.creationDate`, `TagOfEntry`.`updatedOn` AS `TagOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `TagOfEntries` AS `TagOfEntry` ON `Entry`.`id` = `TagOfEntry`.`entryId` AND `TagOfEntry`.`tagId` = 'vivid' WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 30, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 45, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 60, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 90, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 75, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 105, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 120, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 135, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 180, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 150, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 165, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 195, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 1);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 1
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 225, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 210, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (109, 132, 239, 323, 422, 367, 369, 164, 192, 390, 391, 392, 27, 106, 100, 288, 439, 10, 41, 1, 460, 252, 262, 263, 432, 448, 365, 366, 431, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 266, 142, 144, 22, 203, 60, 61, 62, 158, 271, 333, 358, 359, 246, 286, 287, 150, 281, 376, 23, 163, 308, 309, 413, 6, 147, 250, 395, 405, 396, 397, 407, 454, 465, 2, 3, 4, 26, 49, 9, 12, 236, 237, 11, 50, 51, 13, 352, 14, 63, 305, 17, 25, 40, 58, 59, 73, 39, 46, 47, 52, 53, 56, 64, 65, 67, 66, 69, 222, 227, 241, 68, 70, 84, 85, 86, 96, 97, 247, 88, 90, 123, 195, 94, 105, 357, 107, 224, 114, 249, 117, 118, 119, 254, 120, 121, 265, 267, 127, 131, 133, 141, 135, 136, 137, 138, 213, 145, 146, 151, 153, 154, 244, 178, 159, 167, 191, 230, 311, 322, 171, 172, 176, 240, 298, 304, 321, 177, 180, 181, 182, 303, 190, 193, 194, 199, 382, 383, 384, 200, 201, 204, 205, 211, 219, 220, 257, 225, 231, 232, 248, 233, 251, 255, 256, 264, 278, 279, 285, 280, 307, 328, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 362, 363, 368, 371, 372, 373, 398, 399, 400, 403, 408, 412, 414, 437, 438, 444, 445, 447, 450, 452, 455, 458, 462, 463, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 240, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 2);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (168, 164, 192, 44, 197, 320, 4, 26, 49, 8, 71, 72, 307, 54, 55, 355, 56, 105, 357, 112, 113, 134, 114, 249, 120, 135, 136, 137, 138, 213, 140, 156, 157, 176, 240, 298, 304, 321, 180, 194, 216, 242, 243, 229, 310, 312, 313, 326, 328, 337)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 30, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 2
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (168, 164, 192, 44, 197, 320, 4, 26, 49, 8, 71, 72, 307, 54, 55, 355, 56, 105, 357, 112, 113, 134, 114, 249, 120, 135, 136, 137, 138, 213, 140, 156, 157, 176, 240, 298, 304, 321, 180, 194, 216, 242, 243, 229, 310, 312, 313, 326, 328, 337)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (168, 164, 192, 44, 197, 320, 4, 26, 49, 8, 71, 72, 307, 54, 55, 355, 56, 105, 357, 112, 113, 134, 114, 249, 120, 135, 136, 137, 138, 213, 140, 156, 157, 176, 240, 298, 304, 321, 180, 194, 216, 242, 243, 229, 310, 312, 313, 326, 328, 337)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 45, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (282, 283, 183, 184, 212, 453, 198, 314, 401, 429, 217, 428, 203, 185, 319, 411, 21, 92, 173, 174, 54, 55, 355, 56, 64, 65, 67, 88, 114, 249, 149, 214, 162, 180, 188, 189, 215, 309, 194, 206, 218, 268, 278, 296, 297, 315, 316, 317, 332, 334, 371, 372, 373)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 3);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 3
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (282, 283, 183, 184, 212, 453, 198, 314, 401, 429, 217, 428, 203, 185, 319, 411, 21, 92, 173, 174, 54, 55, 355, 56, 64, 65, 67, 88, 114, 249, 149, 214, 162, 180, 188, 189, 215, 309, 194, 206, 218, 268, 278, 296, 297, 315, 316, 317, 332, 334, 371, 372, 373)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 30, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (282, 283, 183, 184, 212, 453, 198, 314, 401, 429, 217, 428, 203, 185, 319, 411, 21, 92, 173, 174, 54, 55, 355, 56, 64, 65, 67, 88, 114, 249, 149, 214, 162, 180, 188, 189, 215, 309, 194, 206, 218, 268, 278, 296, 297, 315, 316, 317, 332, 334, 371, 372, 373)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 45, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 14);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 14
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 14);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 14
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 103, 110, 433, 333, 74, 147, 250, 11, 50, 51, 15, 196, 18, 37, 56, 57, 430, 93, 98, 99, 461, 114, 249, 120, 140, 169, 170, 171, 172, 180, 194, 210, 228, 275, 291, 292, 306, 415, 325, 327, 446, 328, 400, 433, 459)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 103, 110, 433, 333, 74, 147, 250, 11, 50, 51, 15, 196, 18, 37, 56, 57, 430, 93, 98, 99, 461, 114, 249, 120, 140, 169, 170, 171, 172, 180, 194, 210, 228, 275, 291, 292, 306, 415, 325, 327, 446, 328, 400, 433, 459)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 30, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 14);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 14
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 103, 110, 433, 333, 74, 147, 250, 11, 50, 51, 15, 196, 18, 37, 56, 57, 430, 93, 98, 99, 461, 114, 249, 120, 140, 169, 170, 171, 172, 180, 194, 210, 228, 275, 291, 292, 306, 415, 325, 327, 446, 328, 400, 433, 459)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 45, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 15);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 15
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 258, 259, 103, 110, 433, 74, 147, 250, 11, 50, 51, 18, 43, 56, 57, 430, 93, 114, 249, 120, 140, 171, 172, 180, 194, 202, 210, 291, 292, 306, 415, 328, 400, 416, 423, 424, 425, 426, 433, 434, 452, 459)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 258, 259, 103, 110, 433, 74, 147, 250, 11, 50, 51, 18, 43, 56, 57, 430, 93, 114, 249, 120, 140, 171, 172, 180, 194, 202, 210, 291, 292, 306, 415, 328, 400, 416, 423, 424, 425, 426, 433, 434, 452, 459)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 30, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 94);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 94
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (166, 378, 379, 380, 387, 449, 103, 110, 433, 15, 196, 114, 249, 120, 165, 221, 348, 349, 421, 433, 433)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 85);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 85);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 85
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 85
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (183, 184, 212, 453, 109, 132, 239, 323, 422, 314, 401, 429, 10, 41, 1, 460, 428, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 185, 319, 23, 163, 308, 309, 413, 6, 74, 9, 12, 236, 237, 11, 50, 51, 18, 68, 70, 127, 149, 214, 181, 187, 260, 261, 188, 189, 215, 309, 210, 218, 268, 296, 297, 444, 445, 447, 458, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 30, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (183, 184, 212, 453, 109, 132, 239, 323, 422, 314, 401, 429, 10, 41, 1, 460, 428, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 185, 319, 23, 163, 308, 309, 413, 6, 74, 9, 12, 236, 237, 11, 50, 51, 18, 68, 70, 127, 149, 214, 181, 187, 260, 261, 188, 189, 215, 309, 210, 218, 268, 296, 297, 444, 445, 447, 458, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 85);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 85
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (183, 184, 212, 453, 109, 132, 239, 323, 422, 314, 401, 429, 10, 41, 1, 460, 428, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 185, 319, 23, 163, 308, 309, 413, 6, 74, 9, 12, 236, 237, 11, 50, 51, 18, 68, 70, 127, 149, 214, 181, 187, 260, 261, 188, 189, 215, 309, 210, 218, 268, 296, 297, 444, 445, 447, 458, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 45, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 85);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 85);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 85
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 85
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 8);
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 347);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 8
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 347
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (183, 184, 212, 453, 109, 132, 239, 323, 422, 314, 401, 429, 10, 41, 1, 460, 428, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 185, 319, 23, 163, 308, 309, 413, 6, 74, 9, 12, 236, 237, 11, 50, 51, 18, 68, 70, 127, 149, 214, 181, 187, 260, 261, 188, 189, 215, 309, 210, 218, 268, 296, 297, 444, 445, 447, 458, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 75, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (183, 184, 212, 453, 109, 132, 239, 323, 422, 314, 401, 429, 10, 41, 1, 460, 428, 129, 436, 19, 75, 76, 77, 78, 79, 80, 81, 152, 28, 29, 30, 381, 38, 20, 24, 83, 111, 270, 185, 319, 23, 163, 308, 309, 413, 6, 74, 9, 12, 236, 237, 11, 50, 51, 18, 68, 70, 127, 149, 214, 181, 187, 260, 261, 188, 189, 215, 309, 210, 218, 268, 296, 297, 444, 445, 447, 458, 464)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 60, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (164, 192, 82, 122, 377, 443, 124, 125, 126, 155, 417, 216, 242, 243, 293, 294)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 45);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (142, 144, 60, 61, 62, 246, 14, 63, 305, 52, 53, 64, 65, 67, 88, 255, 315, 316, 317, 332)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 45
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (142, 144, 405, 396, 454, 118, 119, 254, 133, 141, 151, 204, 205, 255, 264, 329, 330, 331, 386)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (4, 26, 49, 117, 135, 136, 137, 138, 213, 156, 157, 167, 191, 230, 311, 322, 176, 240, 298, 304, 321, 231, 335, 336)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 504);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 504
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (183, 184, 212, 453, 343, 410, 166, 378, 379, 380, 387, 449, 393, 394, 5, 139, 7, 45, 208, 95, 120, 194, 273, 274, 289, 277, 284, 388, 389, 441, 442, 340, 341, 345, 360, 440)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 504);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 504
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (183, 184, 212, 453, 343, 410, 166, 378, 379, 380, 387, 449, 393, 394, 5, 139, 7, 45, 208, 95, 120, 194, 273, 274, 289, 277, 284, 388, 389, 441, 442, 340, 341, 345, 360, 440)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 30, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name`, `type` FROM `Artists` AS `Artist` WHERE (`Artist`.`deletionDate` IS NULL AND `Artist`.`id` = 11630);
Executing (default): SELECT
      SongOfEntries.entryId as entryId
    FROM
      SongOfEntries
      LEFT JOIN ArtistOfSongs ON SongOfEntries.songId = ArtistOfSongs.songId
    WHERE artistId = 11630
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 20);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 230);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` IN (343, 410, 393, 394, 273, 274, 289, 277, 284, 388, 389, 441, 442, 345, 360, 440)) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 282);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 20;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 230;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 282;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 282 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 230 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 20 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 368);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 368;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 372);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 368 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 372;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 550);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 550;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 372 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 550 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 555);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 555;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 551);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 556);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 555 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1077);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 551;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 556;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1077;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1047);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1047;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 551 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1077 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 556 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1088);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1047 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1088;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1121);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1088 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1121;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1273);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1121 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1273;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1140);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1273 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1140;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1352);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1354);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1352;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1323);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1354;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1323;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1355);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1140 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1352 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1354 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1355;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1323 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1359);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1363);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1363;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1355 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1359;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1363 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1359 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1416);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1416;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1500);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1501);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1500;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1501;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1416 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1501 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1500 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1513);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1516);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1538);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1797);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1932);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1513;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1539);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1516;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 1890);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1797;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1538;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1932;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2322);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1539;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 1890;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1513 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1516 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1797 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1538 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2322;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1932 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1539 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 1890 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2322 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2356);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2356;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2356 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2357);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2357;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2357 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2432);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2440);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2432;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2440;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2440 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2432 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2651);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2564);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2443);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2651;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2655);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2564;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2443;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2651 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2655;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2910);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2716);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2443 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2910;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2716;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2913);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2655 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2716 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2913;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2915);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2910 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2915;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2913 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2915 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2917);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2924);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2925);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2917;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2924;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2925;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2978);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2564 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2925 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2924 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2978;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2917 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 2982);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2978 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 2982;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3019);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 2982 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3022);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3027);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3022;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3019;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3027;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3129);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3129;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3019 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3022 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3027 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3129 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3155);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3177);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3155;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3254);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3177;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3260);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3254;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3260;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3155 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3177 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3254 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3260 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3338);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3338;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3338 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3387);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3719);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3800);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3719;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3387;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3801);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3798);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3800;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3801;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3802);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3798;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3719 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3800 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3798 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3802;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 3803);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3387 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3801 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 3803;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3802 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 4051);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 4051;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 4051 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 3803 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 4110);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 4110;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 4110 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 4176);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 4230);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 4176;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 4230;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 4259);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 4263);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 4259;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 4263;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 4176 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 4230 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 4263 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 4259 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 4315);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 5179);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 5218);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 4315;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 5179;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 5243);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 5240);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 5218;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 5240;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 5243;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 4315 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 5244);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 5179 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 5218 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 5240 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 5243 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 5244;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 5244 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 5373);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 5548);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 5859);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 5633);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 5373;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 5548;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 5633;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 6153);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 5859;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 6387);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 6153;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 6489);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 6387;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 5373 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 7223);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 5548 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 6489;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 7223;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 5633 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 6153 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 5859 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 6387 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 6489 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 7223 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 7259);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 7259;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 7259 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 7260);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 7260;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 7319);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 7319;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 7327);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 7260 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 7327;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 7319 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 7801);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 7801;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 7327 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 7801 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 7820);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 7820;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 7820 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8215);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8230);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8215;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8290);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8230;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8395);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8246);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8290;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8397);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8395;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8246;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8495);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8215 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8230 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8496);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8497);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8397;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8496;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8495;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8497;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8395 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8290 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8521);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8246 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8521;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8397 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8600);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8495 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8497 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8496 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8600;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8521 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8600 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8676);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8676;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8676 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8693);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8682);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8693;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8682;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8735);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8693 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8735;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8682 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8735 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8809);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8809;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8809 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8900);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8900;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8900 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 9263);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 9263;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 9263 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 9476);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 9476;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 9476 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 8931);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 8931;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 9758);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 9758;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 9758 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 8931 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 9784);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 9784;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 9950);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 9784 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 9950;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 10042);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 10652);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 9950 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 10659);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 10042;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 10652;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 10951);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 10659;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 10951;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 11219);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 10652 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 10042 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 10659 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 11219;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 10951 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 11219 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 11614);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 11525);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 11593);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 12283);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 12443);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 11614;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 11525;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 12476);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 12283;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 11593;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 12443;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 12476;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 11614 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 12283 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 11525 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 11593 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 12476 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 12443 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 12657);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 13339);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 13717);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 12657;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 13339;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 13719);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 13717;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 13719;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 12657 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 13728);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 13717 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 13339 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 13728;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 13719 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 13782);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 13728 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 13782;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 13874);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 14480);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 14480;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 13874;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 13782 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 14484);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 14480 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 14484;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 13874 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 14842);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 14842;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 14484 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 15662);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 15047);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 15662;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 16441);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 14842 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 15047;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 16441;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 15662 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 16559);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 16559;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 16441 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 15047 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 16559 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 16594);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 16594;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 16943);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 17189);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 16943;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 17189;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 17199);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 16594 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 17199;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 16943 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 18297);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 17189 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 18297;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 17199 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 18297 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
info  - Generating static pages (616/1232)
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 18841);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 18841;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 19204);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 19094);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 21057);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 21064);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 18841 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 21065);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 19094;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 19204;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 21064;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 21065;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 21057;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 19094 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 21065 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 19204 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 21057 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 22539);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 21064 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 22539;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 22539 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 22934);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 22934;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 22934 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 24239);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 26011);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 28648);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 28943);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 28972);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 28648;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 24239;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 26011;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 28943;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 28972;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 26011 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 28972 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 24239 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 28648 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 28943 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 29663);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 29663;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 29663 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 32182);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 33821);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 35289);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 32182;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 36360);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 33821;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 36360;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 35289;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 37858);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 32182 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 41226);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 37858;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 36360 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 41226;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 35289 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 33821 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 37858 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 41226 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 41340);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 41545);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 41340;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 41545;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 41340 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 42676);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 44651);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 41545 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 45245);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 42676;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 45245;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 44651;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 45245 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 42676 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 44651 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 48036);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 48036;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 48299);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 49871);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 48036 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 49871;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 48299;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 49871 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 48299 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 50703);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 50703;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 50723);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 51198);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 50723;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 51441);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 50703 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 51198;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 51441;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 50723 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 51198 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 51441 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 56903);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 51590);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 56903;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 51590;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 56903 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 59384);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 51590 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 59384;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 60924);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 61198);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 65861);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 60924;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 59384 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 63276);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 68657);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 61198;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 65861;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 68657;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 63276;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 60924 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 68841);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 61198 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 65861 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 63276 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 68841;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 68657 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 81431);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 68841 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 81431;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 81431 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 84095);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 85245);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 84095;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 90781);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 85245;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 96567);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 96567;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 90781;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 98151);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 84095 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 98151;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 85245 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 96567 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 99820);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 90781 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 99820;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 98151 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 99820 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 100634);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 100634;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 102506);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 102506;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 100634 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 102506 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 103742);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 112085);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 112085;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 103742;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 114591);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 114591;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 112085 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 103742 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 114987);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 114591 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 120329);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 120329;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 114987;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 120329 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 114987 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 127169);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 127169;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 127169 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 127520);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 127520;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 127520 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 135628);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 141339);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 146972);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 150952);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 146850);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 146972;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 150978);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 135628;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 157860);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 146850;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 141339;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 150978;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 157860;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 146850 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 141339 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 150978 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 146972 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 135628 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 157860 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 164107);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 164107;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 166391);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 166667);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 166667;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 166391;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 167588);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 164107 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 167588;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 166667 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 166391 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 167588 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 169920);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 178119);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 180185);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 169920;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 178119;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 184133);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 180185;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 150952;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 184133;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 178119 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 169920 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 180185 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 184133 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 150952 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 184692);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 202936);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 197018);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 219729);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 230750);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 202936;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 184692;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 197018;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 219729;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 230750;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 219729 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 202936 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 197018 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 184692 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 230750 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 233017);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 234901);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 248865);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 233017;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 234901;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 265022);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 265022;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 265022 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 276642);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 276642;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 276642 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 248865;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 248865 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 234901 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 233017 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 278747);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 278747;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 281823);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 281823;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 282574);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 282574;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 290231);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 284993);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 292559);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 292615);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 292615;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 292615 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 293278);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 293278;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 293278 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 301689);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 301689;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 301689 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 317204);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 317204;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 317204 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 290231;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 290231 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 284993;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 284993 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 292559;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 292559 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 278747 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 281823 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 282574 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 302957);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 302957;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 295872);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 295872;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 387848);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 387848;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 382265);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 382265;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 382265 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 295872 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 302957 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 387848 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 396029);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 409527);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 396029;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 409527;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 396029 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 409527 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 409791);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 409532);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 409532;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 409791;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 409791 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 409532 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 426271);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 428890);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 429308);
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 441896);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 429308;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 426271;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 426417);
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 428890;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 426417;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 441896;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 429308 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 426271 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `id`, `name` FROM `Songs` AS `Song` WHERE (`Song`.`deletionDate` IS NULL AND `Song`.`id` = 476100);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 428890 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 426417 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `SongOfEntries` AS `SongOfEntry` WHERE `SongOfEntry`.`songId` = 476100;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 441896 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate`, `SongOfEntry`.`id` AS `SongOfEntry.id`, `SongOfEntry`.`songId` AS `SongOfEntry.songId`, `SongOfEntry`.`entryId` AS `SongOfEntry.entryId`, `SongOfEntry`.`creationDate` AS `SongOfEntry.creationDate`, `SongOfEntry`.`updatedOn` AS `SongOfEntry.updatedOn` FROM `Entries` AS `Entry` INNER JOIN `SongOfEntries` AS `SongOfEntry` ON `Entry`.`id` = `SongOfEntry`.`entryId` AND `SongOfEntry`.`songId` = 476100 WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 0, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 15, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 30, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 60, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 90, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 45, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 105, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 120, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 150, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 165, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 135, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 180, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 195, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 225, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 210, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 75, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 240, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 255, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 270, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 285, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 300, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 315, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 330, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 345, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 360, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 375, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 390, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 405, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 420, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT count(*) AS `count` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL);
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 435, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.*, `verses`.`id` AS `verses.id`, `verses`.`text` AS `verses.text`, `verses`.`isMain` AS `verses.isMain`, `verses`.`language` AS `verses.language`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM (SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`deletionDate` FROM `Entries` AS `Entry` WHERE (`Entry`.`deletionDate` IS NULL) AND ( SELECT `entryId` FROM `Verses` AS `verses` WHERE ((`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) AND `verses`.`entryId` = `Entry`.`id`) LIMIT 1 ) IS NOT NULL ORDER BY `Entry`.`recentActionDate` DESC LIMIT 450, 15) AS `Entry` INNER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL AND `verses`.`isMain` = true) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` ORDER BY `Entry`.`recentActionDate` DESC;
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 2);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 5);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 3);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 1);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 4);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 7);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 6);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 9);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 15);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 10);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 8);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 12);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 11);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 13);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 14);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 16);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 17);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 18);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 19);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 20);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 21);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 22);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 23);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 24);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 25);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 26);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 27);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 30);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 28);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 31);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 32);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 29);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 33);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 34);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 35);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 36);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 38);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 37);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 39);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 40);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 41);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 42);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 43);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 44);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 45);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 46);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 47);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 48);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 49);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 50);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 51);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 52);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 53);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 55);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 56);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 57);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 58);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 59);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 54);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 60);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 62);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 64);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 61);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 63);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 65);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 66);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 67);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 68);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 70);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 71);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 73);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 72);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 69);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 74);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 75);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 76);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 77);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 78);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 79);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 80);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 81);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 82);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 83);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 84);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 85);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 86);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 87);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 88);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 90);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 89);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 91);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 92);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 93);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 94);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 95);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 96);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 97);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 99);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 98);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 100);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 101);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 102);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 103);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 104);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 105);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 106);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 108);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 107);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 109);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 110);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 111);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 112);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 114);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 113);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 116);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 115);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 117);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 118);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 119);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 120);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 121);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 122);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 123);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 124);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 125);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 127);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 126);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 128);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 129);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 130);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 132);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 131);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 133);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 134);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 135);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 136);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 137);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 138);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 139);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 140);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 141);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 143);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 142);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 145);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 144);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 146);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 147);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 149);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 150);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 148);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 151);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 152);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 153);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 154);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 155);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 157);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 156);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 158);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 159);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 160);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 161);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 163);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 162);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 166);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 165);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 164);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 167);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 168);
info  - Generating static pages (924/1232)
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 169);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 173);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 170);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 171);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 172);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 174);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 175);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 176);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 177);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 178);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 179);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 182);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 181);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 180);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 183);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 186);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 184);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 185);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 187);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 188);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 189);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 190);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 191);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 192);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 193);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 194);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 195);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 196);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 197);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 198);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 199);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 200);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 201);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 203);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 202);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 204);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 205);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 206);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 208);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 207);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 209);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 210);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 211);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 212);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 214);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 213);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 215);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 216);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 217);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 218);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 219);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 220);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 222);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 221);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 223);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 224);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 225);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 226);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 227);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 228);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 229);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 230);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 232);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 231);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 233);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 234);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 235);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 236);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 237);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 238);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 239);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 240);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 241);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 242);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 243);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 244);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 245);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 247);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 246);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 248);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 249);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 250);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 252);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 253);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 251);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 254);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 255);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 257);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 256);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 258);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 259);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 260);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 261);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 262);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 263);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 264);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 265);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 266);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 267);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 268);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 269);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 270);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 272);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 271);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 273);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 274);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 276);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 277);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 275);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 278);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 279);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 280);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 281);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 282);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 283);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 284);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 286);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 287);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 285);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 288);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 289);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 291);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 290);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 292);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 293);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 294);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 296);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 295);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 297);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 298);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 299);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 300);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 301);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 303);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 302);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 304);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 305);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 306);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 307);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 308);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 309);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 310);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 311);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 312);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 314);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 315);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 313);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 316);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 317);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 318);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 319);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 320);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 321);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 322);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 323);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 325);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 324);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 326);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 327);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 328);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 329);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 330);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 331);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 332);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 333);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 334);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 335);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 336);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 337);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 338);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 340);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 339);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 341);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 342);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 343);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 344);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 345);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 347);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 346);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 348);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 349);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 350);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 351);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 352);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 353);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 354);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 355);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 356);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 357);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 358);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 360);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 359);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 361);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 362);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 363);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 364);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 365);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 366);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 367);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 368);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 369);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 370);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 371);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 372);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 373);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 374);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 376);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 375);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 377);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 378);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 379);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 380);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 381);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 383);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 382);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 384);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 385);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 386);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 387);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 388);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 389);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 390);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 391);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 392);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 393);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 394);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 395);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 396);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 397);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 398);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 399);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 400);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 401);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 402);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 403);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 405);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 404);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 406);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 407);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 408);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 409);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 410);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 411);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 412);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 413);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 415);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 416);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 414);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 417);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 418);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 419);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 420);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 421);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 422);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 423);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 424);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 425);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 426);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 427);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 428);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 429);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 430);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 431);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 432);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 433);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 435);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 434);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 436);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 437);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 438);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 439);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 440);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 441);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 442);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 443);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 444);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 445);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 446);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 447);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 448);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 449);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 450);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 451);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 452);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 453);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 454);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 455);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 457);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 456);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 458);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 459);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 460);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 461);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 462);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 463);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 465);
Executing (default): SELECT `Entry`.`id`, `Entry`.`title`, `Entry`.`producersName`, `Entry`.`vocalistsName`, `Entry`.`authorId`, `Entry`.`comment`, `Entry`.`recentActionDate`, `Entry`.`creationDate`, `Entry`.`updatedOn`, `Entry`.`deletionDate`, `verses`.`id` AS `verses.id`, `verses`.`language` AS `verses.language`, `verses`.`isOriginal` AS `verses.isOriginal`, `verses`.`isMain` AS `verses.isMain`, `verses`.`text` AS `verses.text`, `verses`.`html` AS `verses.html`, `verses`.`stylizedText` AS `verses.stylizedText`, `verses`.`translator` AS `verses.translator`, `verses`.`typingSequence` AS `verses.typingSequence`, `verses`.`entryId` AS `verses.entryId`, `verses`.`deletionDate` AS `verses.deletionDate`, `tags`.`name` AS `tags.name`, `tags`.`slug` AS `tags.slug`, `tags`.`color` AS `tags.color`, `songs`.`id` AS `songs.id`, `songs`.`name` AS `songs.name`, `songs`.`coverUrl` AS `songs.coverUrl`, `songs`.`vocaDbJson` AS `songs.vocaDbJson`, `songs->artists`.`id` AS `songs.artists.id`, `songs->artists`.`name` AS `songs.artists.name`, `songs->artists->ArtistOfSong`.`artistOfSongId` AS `songs.artists.ArtistOfSong.artistOfSongId`, `songs->artists->ArtistOfSong`.`artistRoles` AS `songs.artists.ArtistOfSong.artistRoles`, `songs->artists->ArtistOfSong`.`categories` AS `songs.artists.ArtistOfSong.categories`, `pulses`.`id` AS `pulses.id`, `pulses`.`creationDate` AS `pulses.creationDate` FROM `Entries` AS `Entry` LEFT OUTER JOIN `Verses` AS `verses` ON `Entry`.`id` = `verses`.`entryId` AND (`verses`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `TagOfEntries` AS `tags->TagOfEntry` INNER JOIN `Tags` AS `tags` ON `tags`.`slug` = `tags->TagOfEntry`.`tagId`) ON `Entry`.`id` = `tags->TagOfEntry`.`entryId` LEFT OUTER JOIN ( `SongOfEntries` AS `songs->SongOfEntry` INNER JOIN `Songs` AS `songs` ON `songs`.`id` = `songs->SongOfEntry`.`songId`) ON `Entry`.`id` = `songs->SongOfEntry`.`entryId` AND (`songs`.`deletionDate` IS NULL) LEFT OUTER JOIN ( `ArtistOfSongs` AS `songs->artists->ArtistOfSong` INNER JOIN `Artists` AS `songs->artists` ON `songs->artists`.`id` = `songs->artists->ArtistOfSong`.`artistId`) ON `songs`.`id` = `songs->artists->ArtistOfSong`.`songId` AND (`songs->artists`.`deletionDate` IS NULL) LEFT OUTER JOIN `Pulses` AS `pulses` ON `Entry`.`id` = `pulses`.`entryId` WHERE (`Entry`.`deletionDate` IS NULL AND `Entry`.`id` = 464);
info  - Generating static pages (1232/1232)
info  - Finalizing page optimization...

Route (pages)                                                     Size     First Load JS
┌ ● / (ISR: 10 Seconds) (1975 ms)                                 4.48 kB         261 kB
├   └ css/369b480bf438f63f.css                                    2.87 kB
├   /_app                                                         0 B             200 kB
├ ○ /404                                                          1.9 kB          204 kB
├   └ css/776be6b0a13ac7f6.css                                    588 B
├ λ /api/og                                                       0 B             200 kB
├ ● /artists/[artistId] (ISR: 10 Seconds) (37800 ms)              220 B           256 kB
├   ├ /artists/2 (2042 ms)
├   ├ /artists/9055 (1975 ms)
├   ├ /artists/79 (1710 ms)
├   ├ /artists/16 (1540 ms)
├   ├ /artists/1 (446 ms)
├   ├ /artists/3199 (309 ms)
├   ├ /artists/397 (303 ms)
├   └ [+419 more paths]
├ ● /artists/[artistId]/pages/[page] (ISR: 10 Seconds) (7044 ms)  315 B           256 kB
├   ├ /artists/1/pages/6 (352 ms)
├   ├ /artists/1/pages/2
├   ├ /artists/1/pages/3
├   ├ /artists/1/pages/4
├   ├ /artists/1/pages/5
├   ├ /artists/1/pages/7
├   ├ /artists/1/pages/8
├   └ [+33 more paths]
├ ○ /dashboard (1903 ms)                                          5.33 kB         349 kB
├ ○ /dashboard/entries (333 ms)                                   2.21 kB         490 kB
├ ○ /dashboard/entries/[entryId] (2718 ms)                        514 B           463 kB
├ ○ /dashboard/entries/new                                        355 B           463 kB
├ ○ /dashboard/tags (1204 ms)                                     6.04 kB         529 kB
├ ● /entries/[entryId] (ISR: 10 Seconds) (35838 ms)               11.5 kB         264 kB
├   └ css/717442033f4ac546.css                                    3.62 kB
├   ├ /entries/1
├   ├ /entries/2
├   ├ /entries/3
├   └ [+462 more paths]
├ ○ /login (2494 ms)                                              1.86 kB         328 kB
├ λ /logout                                                       473 B           206 kB
├ ● /pages/[page] (ISR: 10 Seconds) (4646 ms)                     5.18 kB         255 kB
├   └ css/de35f2897bf97876.css                                    2.67 kB
├   ├ /pages/2
├   ├ /pages/3
├   ├ /pages/4
├   └ [+27 more paths]
├ ○ /sandbox                                                      279 B           200 kB
├ ○ /screensavers                                                 1.48 kB         230 kB
├   └ css/25a6802685f4d851.css                                    1.78 kB
├ λ /screensavers/centered                                        6.96 kB         230 kB
├   └ css/4efdc931055b0c94.css                                    1.07 kB
├ ● /screensavers/docs (1494 ms)                                  1.44 kB         235 kB
├   └ css/8b4a7f6ccceb43f5.css                                    2.06 kB
├ λ /screensavers/glucagon                                        4.04 kB         228 kB
├   └ css/8c4ba8747f6c09df.css                                    859 B
├ λ /screensavers/marcacos                                        2.97 kB         210 kB
├   └ css/7a68d50bd102d43b.css                                    722 B
├ λ /screensavers/stacked                                         7.27 kB         231 kB
├   └ css/91fdd679a83aaca7.css                                    1.11 kB
├ ○ /search (712 ms)                                              37.3 kB         306 kB
├   └ css/d0670e4a1f474fdf.css                                    2.42 kB
├ ● /songs/[songId] (ISR: 10 Seconds) (15574 ms)                  219 B           256 kB
├   ├ /songs/20
├   ├ /songs/230
├   ├ /songs/282
├   └ [+247 more paths]
├ ● /songs/[songId]/pages/[page]                                  315 B           256 kB
├ ● /tags (ISR: 60 Seconds)                                       2.38 kB         236 kB
├   └ css/dc6f38357f08fa38.css                                    1.78 kB
├ ● /tags/[slug] (ISR: 10 Seconds) (1518 ms)                      213 B           256 kB
├   ├ /tags/core
├   ├ /tags/dark
├   ├ /tags/light
├   └ [+4 more paths]
└ ● /tags/[slug]/pages/[page]                                     312 B           256 kB
+ First Load JS shared by all                                     201 kB
  ├ chunks/framework-f29e48ae95cae5a3.js                          45.2 kB
  ├ chunks/main-f55aadb2a8021283.js                               26.9 kB
  ├ chunks/pages/_app-d3b2f8e75c9c6b03.js                         125 kB
  ├ chunks/webpack-8309be339660364e.js                            2.63 kB
  └ css/78a17288e483247e.css                                      1.2 kB

λ  (Server)  server-side renders at runtime (uses getInitialProps or getServerSideProps)
○  (Static)  automatically rendered as static HTML (uses no initial props)
●  (SSG)     automatically generated as static HTML + JSON (uses getStaticProps)
   (ISR)     incremental static regeneration (uses revalidate in getStaticProps)

